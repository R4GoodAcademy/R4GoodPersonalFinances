[{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Kamil Wais Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kamil Wais. Author, maintainer, copyright holder, funder. Olesia Wais. Author.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wais K, Wais O (2025). R4GoodPersonalFinances: Make Optimal Financial Decisions. doi:10.32614/CRAN.package.R4GoodPersonalFinances, R package version 0.2.0, https://r4goodacademy.github.io/R4GoodPersonalFinances/, https://www.r4good.academy/.","code":"@Manual{,   title = {R4GoodPersonalFinances: Make Optimal Financial Decisions},   author = {Kamil Wais and Olesia Wais},   year = {2025},   note = {R package version 0.2.0, https://r4goodacademy.github.io/R4GoodPersonalFinances/},   url = {https://www.r4good.academy/},   doi = {10.32614/CRAN.package.R4GoodPersonalFinances}, }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/index.html","id":"r4goodpersonalfinances-","dir":"","previous_headings":"","what":"Make Optimal Financial Decisions","title":"Make Optimal Financial Decisions","text":"Make Optimal Financial Decisions R4GoodPersonalFinances R package set tools designed help plan make informed, data-driven decisions personal household finances. tools selected carefully align academic consensus, bridging gap theoretical knowledge practical application. assist : finding optimal asset allocation, preparing retirement financial independence, calculating optimal spending, .","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/index.html","id":"installation-from-cran","dir":"","previous_headings":"Installation","what":"Installation from CRAN","title":"Make Optimal Financial Decisions","text":"latest stable version package released CRAN can installed :","code":"# install.packages(\"pak\") pak::pak(\"R4GoodPersonalFinances\")"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/index.html","id":"installation-from-github","dir":"","previous_headings":"Installation","what":"Installation from GitHub","title":"Make Optimal Financial Decisions","text":"can install latest version R4GoodPersonalFinances GitHub :","code":"# install.packages(\"pak\") pak::pak(\"R4GoodAcademy/R4GoodPersonalFinances\")"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/index.html","id":"installation-from-r-universe","dir":"","previous_headings":"Installation","what":"Installation from R-universe","title":"Make Optimal Financial Decisions","text":"can install package R-universe also WebAssembly (WASM) binaries use WebR applications:","code":"install.packages(   \"R4GoodPersonalFinances\",    repos = c(     \"https://r4goodacademy.r-universe.dev\",      \"https://cloud.r-project.org\"   ) )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Make Optimal Financial Decisions","text":"Haghani V., White J. (2023) Missing Billionaires: Guide Better Financial Decisions. ISBN:9781119747918. Idzorek, Thomas M., Paul D. Kaplan. (2024) Lifetime Financial Advice: Personalized Optimal Multilevel Approach. CFA Institute Research Foundation. ISBN:9781952927379. Milevsky, Moshe. (2020) Retirement Income Recipes R: Ruin Probabilities Intelligent Drawdowns. Springer. doi.org/10.1007/978-3-030-51434-1.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/index.html","id":"r-for-good-academy-","dir":"","previous_headings":"","what":"R for Good Academy","title":"Make Optimal Financial Decisions","text":"R4GoodPersonalFinances R package part R Good Academy project. can find free resources explaining details concepts personal finances implemented R package. See : www.r4good.academy official package documentation can found :r4goodacademy.github.io/R4GoodPersonalFinances Make Optimal Financial Decisions R4GoodPersonalFinances R package!","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":null,"dir":"Reference","previous_headings":"","what":"Household class — Household","title":"Household class — Household","text":"Household class aggregates information household members.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Household class — Household","text":"object class Household.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Household class — Household","text":"expected_income Set rules used generate streams expected income expected_spending Set rules used generate streams expected spending risk_tolerance Risk tolerance household consumption_impatience_preference Consumption impatience preference household - subjective discount rate (rho). Higher values indicate stronger preference consumption today versus future. smooth_consumption_preference Smooth consumption preference household - Elasticity Intertemporal Substitution (EOIS) (eta). Higher values indicate flexibility lower preference smooth consumption.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Household class — Household","text":"Household$get_members() Household$add_member() Household$set_member() Household$set_lifespan() Household$get_lifespan() Household$calc_survival() Household$get_min_age() Household$clone()","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"method-get-members-","dir":"Reference","previous_headings":"","what":"Method get_members()","title":"Household class — Household","text":"Getting members household","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Household class — Household","text":"","code":"Household$get_members()"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"method-add-member-","dir":"Reference","previous_headings":"","what":"Method add_member()","title":"Household class — Household","text":"Adding member household fail member name already exists.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Household class — Household","text":"","code":"Household$add_member(household_member)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Household class — Household","text":"household_member HouseholdMember object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"method-set-member-","dir":"Reference","previous_headings":"","what":"Method set_member()","title":"Household class — Household","text":"Setting member household member already exists, overwritten.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Household class — Household","text":"","code":"Household$set_member(member)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Household class — Household","text":"member HouseholdMember object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"method-set-lifespan-","dir":"Reference","previous_headings":"","what":"Method set_lifespan()","title":"Household class — Household","text":"Setting arbitrary lifespan household","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Household class — Household","text":"","code":"Household$set_lifespan(value)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Household class — Household","text":"value number years.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"method-get-lifespan-","dir":"Reference","previous_headings":"","what":"Method get_lifespan()","title":"Household class — Household","text":"Getting lifespan household set, calculated based members' lifespans.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Household class — Household","text":"","code":"Household$get_lifespan(current_date = get_current_date())"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Household class — Household","text":"current_date date format \"YYYY-MM-DD\".","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"method-calc-survival-","dir":"Reference","previous_headings":"","what":"Method calc_survival()","title":"Household class — Household","text":"Calculating survival rate household based members' parameters Gompertz model.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Household class — Household","text":"","code":"Household$calc_survival(current_date = get_current_date())"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Household class — Household","text":"current_date date format \"YYYY-MM-DD\".","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"method-get-min-age-","dir":"Reference","previous_headings":"","what":"Method get_min_age()","title":"Household class — Household","text":"Calculating minimum age household members.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Household class — Household","text":"","code":"Household$get_min_age(current_date = get_current_date())"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Household class — Household","text":"current_date date format \"YYYY-MM-DD\".","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Household class — Household","text":"objects class cloneable method.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Household class — Household","text":"","code":"Household$clone(deep = FALSE)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Household class — Household","text":"deep Whether make deep clone.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/Household.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Household class — Household","text":"","code":"household <- Household$new() household$risk_tolerance #> [1] 0.5 household$consumption_impatience_preference #> [1] 0.04 household$smooth_consumption_preference #> [1] 1"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":null,"dir":"Reference","previous_headings":"","what":"HouseholdMember class — HouseholdMember","title":"HouseholdMember class — HouseholdMember","text":"HouseholdMember class aggregates information single member household.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HouseholdMember class — HouseholdMember","text":"object class HouseholdMember.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"HouseholdMember class — HouseholdMember","text":"max_age maximum age household member mode Gompertz mode parameter dispersion Gompertz dispersion parameter","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"HouseholdMember class — HouseholdMember","text":"HouseholdMember$new() HouseholdMember$get_name() HouseholdMember$get_birth_date() HouseholdMember$calc_age() HouseholdMember$get_lifespan() HouseholdMember$calc_life_expectancy() HouseholdMember$calc_survival_probability() HouseholdMember$get_events() HouseholdMember$set_event() HouseholdMember$clone()","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"HouseholdMember class — HouseholdMember","text":"Creating new object class HouseholdMember","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$new(name, birth_date, mode = NULL, dispersion = NULL)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HouseholdMember class — HouseholdMember","text":"name name member. birth_date birth date household member format YYYY-MM-DD. mode Gompertz mode parameter. dispersion Gompertz dispersion parameter.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-get-name-","dir":"Reference","previous_headings":"","what":"Method get_name()","title":"HouseholdMember class — HouseholdMember","text":"Getting name household member","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$get_name()"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-get-birth-date-","dir":"Reference","previous_headings":"","what":"Method get_birth_date()","title":"HouseholdMember class — HouseholdMember","text":"Getting birth date household member","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$get_birth_date()"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-calc-age-","dir":"Reference","previous_headings":"","what":"Method calc_age()","title":"HouseholdMember class — HouseholdMember","text":"Calculating age household member","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$calc_age(current_date = get_current_date())"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"HouseholdMember class — HouseholdMember","text":"current_date date format \"YYYY-MM-DD\".","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-get-lifespan-","dir":"Reference","previous_headings":"","what":"Method get_lifespan()","title":"HouseholdMember class — HouseholdMember","text":"Calculating lifespan household member","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$get_lifespan(current_date = get_current_date())"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"HouseholdMember class — HouseholdMember","text":"current_date date format \"YYYY-MM-DD\".","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-calc-life-expectancy-","dir":"Reference","previous_headings":"","what":"Method calc_life_expectancy()","title":"HouseholdMember class — HouseholdMember","text":"Calculating life expectancy household member","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$calc_life_expectancy(current_date = get_current_date())"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"HouseholdMember class — HouseholdMember","text":"current_date date format \"YYYY-MM-DD\".","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-calc-survival-probability-","dir":"Reference","previous_headings":"","what":"Method calc_survival_probability()","title":"HouseholdMember class — HouseholdMember","text":"Calculating survival probability household member","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$calc_survival_probability(   target_age,   current_date = get_current_date() )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"HouseholdMember class — HouseholdMember","text":"target_age Target age (numeric, years). current_date date format \"YYYY-MM-DD\".","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-get-events-","dir":"Reference","previous_headings":"","what":"Method get_events()","title":"HouseholdMember class — HouseholdMember","text":"Getting events related household member","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$get_events()"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-set-event-","dir":"Reference","previous_headings":"","what":"Method set_event()","title":"HouseholdMember class — HouseholdMember","text":"Setting event related household member","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$set_event(event, start_age, end_age = Inf, years = Inf)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"HouseholdMember class — HouseholdMember","text":"event name event. start_age age household member event starts. end_age age household member event ends. years number years event lasts.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"HouseholdMember class — HouseholdMember","text":"objects class cloneable method.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"HouseholdMember class — HouseholdMember","text":"","code":"HouseholdMember$clone(deep = FALSE)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"HouseholdMember class — HouseholdMember","text":"deep Whether make deep clone.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/HouseholdMember.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HouseholdMember class — HouseholdMember","text":"","code":"member <- HouseholdMember$new(   name       = \"Isabela\",   birth_date = \"1980-07-15\",   mode       = 91,   dispersion = 8.88 ) member$calc_age() #> [1] 44.8898 member$calc_life_expectancy() #> [1] 86.15234"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/R4GoodPersonalFinances-package.html","id":null,"dir":"Reference","previous_headings":"","what":"R4GoodPersonalFinances: Make Optimal Financial Decisions — R4GoodPersonalFinances-package","title":"R4GoodPersonalFinances: Make Optimal Financial Decisions — R4GoodPersonalFinances-package","text":"Make optimal decisions personal household finances. Use tools methods selected carefully align academic consensus, bridging gap theoretical knowledge practical application. help find personalized optimal discretionary spending optimal asset allocation, prepare retirement financial independence. optimal solution problems extremely complex, single lifetime get right. Fortunately, now user-friendly tools implemented, integrate life-cycle models single-period net-worth mean-variance optimization models. tools can used anyone wants see highly-personalized optimal decisions can look like. details see: Idzorek T., Kaplan P. (2024, ISBN:9781952927379), Haghani V., White J. (2023, ISBN:9781119747918).","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/R4GoodPersonalFinances-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R4GoodPersonalFinances: Make Optimal Financial Decisions — R4GoodPersonalFinances-package","text":"Maintainer: Kamil Wais kamil.wais@gmail.com (ORCID) [copyright holder, funder] Authors: Olesia Wais olesia.wais@gmail.com (ORCID)","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Working with cache — get_cache_info","title":"Working with cache — get_cache_info","text":"Get information cache Reset cache Set cache directory","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Working with cache — get_cache_info","text":"","code":"get_cache_info()  reset_cache()  set_cache(path = file.path(getwd(), \".cache\"))"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Working with cache — get_cache_info","text":"path path cache directory. Defaults '.cache' folder current working directory.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Working with cache — get_cache_info","text":"Invisibly returns path cache directory list containing: path path cache directory. files number files cache.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Working with cache — get_cache_info","text":"","code":"if (FALSE) { # interactive() get_cache_info() } if (FALSE) { # interactive() reset_cache() } if (FALSE) { # interactive() set_cache() }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_effective_tax_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Effective Tax Rate — calc_effective_tax_rate","title":"Calculate Effective Tax Rate — calc_effective_tax_rate","text":"Calculate Effective Tax Rate","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_effective_tax_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Effective Tax Rate — calc_effective_tax_rate","text":"","code":"calc_effective_tax_rate(portfolio, tax_rate_ltcg, tax_rate_ordinary_income)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_effective_tax_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Effective Tax Rate — calc_effective_tax_rate","text":"portfolio nested tibble class Portfolio. tax_rate_ltcg numeric. Tax rate long-term capital gains. tax_rate_ordinary_income numeric. Tax rate ordinary income.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_effective_tax_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Effective Tax Rate — calc_effective_tax_rate","text":"portfolio object augmented nested columns effective tax rates calculations.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_effective_tax_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Effective Tax Rate — calc_effective_tax_rate","text":"","code":"portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000)  portfolio <-     calc_effective_tax_rate(      portfolio,      tax_rate_ltcg = 0.20,       tax_rate_ordinary_income = 0.40    )  portfolio$aftertax$effective_tax_rate  #> [1] 0.1961812 0.2335788"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_joint_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating the Gompertz model parameters for joint survival — calc_gompertz_joint_parameters","title":"Calculating the Gompertz model parameters for joint survival — calc_gompertz_joint_parameters","text":"Calculating Gompertz model parameters joint survival","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_joint_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating the Gompertz model parameters for joint survival — calc_gompertz_joint_parameters","text":"","code":"calc_gompertz_joint_parameters(   p1 = list(age = NULL, mode = NULL, dispersion = NULL),   p2 = list(age = NULL, mode = NULL, dispersion = NULL),   max_age = 120 )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_joint_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating the Gompertz model parameters for joint survival — calc_gompertz_joint_parameters","text":"p1 list age, mode dispersion parameters first person (p1). p2 list age, mode dispersion parameters second person (p2). max_age numeric. maximum age Gompertz model.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_joint_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating the Gompertz model parameters for joint survival — calc_gompertz_joint_parameters","text":"list containing: data data frame survival rates 'p1', 'p2', 'joint' survival, fitted Gompertz model mode mode joint Gompertz distribution dispersion dispersion parameter joint Gompertz distribution","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_joint_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating the Gompertz model parameters for joint survival — calc_gompertz_joint_parameters","text":"","code":"calc_gompertz_joint_parameters(   p1 = list(     age        = 65,     mode       = 88,     dispersion = 10.65   ),   p2 = list(     age        = 60,     mode       = 91,     dispersion = 8.88   ),   max_age = 110 ) #> $data #> # A tibble: 51 × 5 #>     year    p1    p2 joint gompertz #>    <int> <dbl> <dbl> <dbl>    <dbl> #>  1     0 1     1     1        1     #>  2     1 0.989 0.996 1.00     0.999 #>  3     2 0.976 0.992 1.00     0.998 #>  4     3 0.963 0.988 1.00     0.996 #>  5     4 0.949 0.983 0.999    0.995 #>  6     5 0.933 0.977 0.998    0.993 #>  7     6 0.916 0.971 0.998    0.990 #>  8     7 0.898 0.964 0.996    0.988 #>  9     8 0.879 0.956 0.995    0.985 #> 10     9 0.858 0.948 0.993    0.981 #> # ℹ 41 more rows #>  #> $mode #> [1] 92.94554 #>  #> $dispersion #> [1] 6.501515 #>"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating Gompertz model parameters — calc_gompertz_parameters","title":"Calculating Gompertz model parameters — calc_gompertz_parameters","text":"Calculating Gompertz model parameters","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating Gompertz model parameters — calc_gompertz_parameters","text":"","code":"calc_gompertz_parameters(   mortality_rates,   current_age,   estimate_max_age = FALSE )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating Gompertz model parameters — calc_gompertz_parameters","text":"mortality_rates data frame columns mortality_rate age. Usually output read_hmd_life_tables() function filtered data life_tables object. current_age numeric. Current age. estimate_max_age logical. maximum age estimated?","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating Gompertz model parameters — calc_gompertz_parameters","text":"list containing: data input mortality rates data frame additional columns like 'survival_rate' 'probability_of_death' mode mode Gompertz distribution dispersion dispersion parameter Gompertz distribution current_age current age parameter max_age maximum age parameter","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_parameters.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculating Gompertz model parameters — calc_gompertz_parameters","text":"Blanchet, David M., Paul D. Kaplan. 2013. \"Alpha, Beta, Now... Gamma.\" Journal Retirement 1 (2): 29-45. doi:10.3905/jor.2013.1.2.029 .","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating Gompertz model parameters — calc_gompertz_parameters","text":"","code":"mortality_rates <-    dplyr::filter(     life_tables,     country == \"USA\" &      sex     == \"male\" &     year    == 2022   )    calc_gompertz_parameters(   mortality_rates = mortality_rates,   current_age     = 65 ) #> $data #> # A tibble: 46 × 8 #>    country sex    year   age mortality_rate life_expectancy survival_rate #>    <chr>   <chr> <int> <int>          <dbl>           <dbl>         <dbl> #>  1 USA     male   2022    65         0.0178            17.7         1     #>  2 USA     male   2022    66         0.0187            17.0         0.981 #>  3 USA     male   2022    67         0.0200            16.3         0.962 #>  4 USA     male   2022    68         0.0214            15.6         0.941 #>  5 USA     male   2022    69         0.0228            14.9         0.920 #>  6 USA     male   2022    70         0.0246            14.3         0.897 #>  7 USA     male   2022    71         0.0264            13.6         0.873 #>  8 USA     male   2022    72         0.0282            13.0         0.849 #>  9 USA     male   2022    73         0.0306            12.3         0.823 #> 10 USA     male   2022    74         0.0331            11.7         0.796 #> # ℹ 36 more rows #> # ℹ 1 more variable: probability_of_death <dbl> #>  #> $mode #> [1] 86 #>  #> $dispersion #> [1] 8.816627 #>  #> $current_age #> [1] 65 #>  #> $max_age #> NULL #>"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_survival_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating Gompertz survival probability — calc_gompertz_survival_probability","title":"Calculating Gompertz survival probability — calc_gompertz_survival_probability","text":"Calculating Gompertz survival probability","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_survival_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating Gompertz survival probability — calc_gompertz_survival_probability","text":"","code":"calc_gompertz_survival_probability(   current_age,   target_age,   mode,   dispersion,   max_age = NULL )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_survival_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating Gompertz survival probability — calc_gompertz_survival_probability","text":"current_age Current age target_age Target age mode Mode Gompertz distribution dispersion Dispersion Gompertz distribution max_age Maximum age. Defaults NULL.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_survival_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating Gompertz survival probability — calc_gompertz_survival_probability","text":"numeric. probability survival 'current_age' 'target_age' based Gompertz distribution given parameters.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_gompertz_survival_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating Gompertz survival probability — calc_gompertz_survival_probability","text":"","code":"calc_gompertz_survival_probability(   current_age = 65,    target_age  = 85,    mode        = 80,    dispersion  = 10 ) #> [1] 0.2403663"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_life_expectancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Life Expectancy — calc_life_expectancy","title":"Calculate Life Expectancy — calc_life_expectancy","text":"Calculate Life Expectancy","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_life_expectancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Life Expectancy — calc_life_expectancy","text":"","code":"calc_life_expectancy(current_age, mode, dispersion, max_age = 120)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_life_expectancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Life Expectancy — calc_life_expectancy","text":"current_age numeric. Current age. mode numeric. Mode Gompertz distribution. dispersion numeric. Dispersion Gompertz distribution. max_age numeric. Maximum age. Defaults 120.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_life_expectancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Life Expectancy — calc_life_expectancy","text":"numeric. Total life expectancy years.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_life_expectancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Life Expectancy — calc_life_expectancy","text":"","code":"calc_life_expectancy(   current_age = 65,    mode        = 80,    dispersion  = 10 ) #> [1] 79.17742"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_asset_allocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate optimal asset allocation — calc_optimal_asset_allocation","title":"Calculate optimal asset allocation — calc_optimal_asset_allocation","text":"Calculate optimal asset allocation","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_asset_allocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate optimal asset allocation — calc_optimal_asset_allocation","text":"","code":"calc_optimal_asset_allocation(   household,   portfolio,   current_date = get_current_date() )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_asset_allocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate optimal asset allocation — calc_optimal_asset_allocation","text":"household R6 object class Household. portfolio nested tibble class Portfolio. current_date character. Current date format YYYY-MM-DD. default, output get_current_date().","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_asset_allocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate optimal asset allocation — calc_optimal_asset_allocation","text":"portfolio additional nested columns: allocations$optimal - optimal joint net-worth portfolio allocations allocations$current - current allocations","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_asset_allocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate optimal asset allocation — calc_optimal_asset_allocation","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"1980-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"members$older$age <= 65 ~ 7000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"TRUE ~ 5000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000)  portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg = 0.20,      tax_rate_ordinary_income = 0.40   )  portfolio <-    calc_optimal_asset_allocation(    household = household,    portfolio = portfolio,    current_date = \"2020-07-15\"   )  portfolio$allocations }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_risky_asset_allocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate optimal risky asset allocation — calc_optimal_risky_asset_allocation","title":"Calculate optimal risky asset allocation — calc_optimal_risky_asset_allocation","text":"Calculates optimal allocation risky asset using Merton Share formula.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_risky_asset_allocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate optimal risky asset allocation — calc_optimal_risky_asset_allocation","text":"","code":"calc_optimal_risky_asset_allocation(   risky_asset_return_mean,   risky_asset_return_sd,   safe_asset_return,   risk_aversion )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_risky_asset_allocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate optimal risky asset allocation — calc_optimal_risky_asset_allocation","text":"risky_asset_return_mean numeric. expected (average) yearly return risky asset. risky_asset_return_sd numeric. standard deviation yearly returns risky asset. safe_asset_return numeric. expected yearly return safe asset. risk_aversion numeric. risk aversion coefficient.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_risky_asset_allocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate optimal risky asset allocation — calc_optimal_risky_asset_allocation","text":"numeric. optimal allocation risky asset. case NaN() (division zero) optimal allocation risky asset set 0.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_risky_asset_allocation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate optimal risky asset allocation — calc_optimal_risky_asset_allocation","text":"Can used calculate optimal allocation risky asset vectors inputs.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_optimal_risky_asset_allocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate optimal risky asset allocation — calc_optimal_risky_asset_allocation","text":"","code":"calc_optimal_risky_asset_allocation(   risky_asset_return_mean = 0.05,   risky_asset_return_sd   = 0.15,   safe_asset_return       = 0.02,   risk_aversion           = 2 ) #> [1] 0.6666667  calc_optimal_risky_asset_allocation(   risky_asset_return_mean = c(0.05, 0.06),   risky_asset_return_sd   = c(0.15, 0.16),   safe_asset_return       = 0.02,   risk_aversion           = 2 ) #> [1] 0.6666667 0.7812500"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_portfolio_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Portfolio Parameters — calc_portfolio_parameters","title":"Calculate Portfolio Parameters — calc_portfolio_parameters","text":"Calculate Portfolio Parameters","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_portfolio_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Portfolio Parameters — calc_portfolio_parameters","text":"","code":"calc_portfolio_parameters(portfolio)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_portfolio_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Portfolio Parameters — calc_portfolio_parameters","text":"portfolio tibble class Portfolio. Usually created using create_portfolio_template customised.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_portfolio_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Portfolio Parameters — calc_portfolio_parameters","text":"list following elements: value: value portfolio. weights: weights assets portfolio. expected_return: expected return portfolio. standard_deviation: standard deviation portfolio.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_portfolio_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Portfolio Parameters — calc_portfolio_parameters","text":"","code":"portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000)  calc_portfolio_parameters(portfolio) #> $value #> [1] 40000 #>  #> $weights #>   GlobalStocksIndexFund InflationProtectedBonds  #>                    0.25                    0.75  #>  #> $expected_return #> [1] 0.02765 #>  #> $standard_deviation #> [1] 0.0375 #>"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_purchasing_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate purchasing power — calc_purchasing_power","title":"Calculate purchasing power — calc_purchasing_power","text":"Calculates changes purchasing power time, taking account real interest rate.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_purchasing_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate purchasing power — calc_purchasing_power","text":"","code":"calc_purchasing_power(x, years, real_interest_rate)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_purchasing_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate purchasing power — calc_purchasing_power","text":"x numeric. initial amount money. years numeric. number years. real_interest_rate numeric. yearly real interest rate.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_purchasing_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate purchasing power — calc_purchasing_power","text":"numeric. purchasing power.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_purchasing_power.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate purchasing power — calc_purchasing_power","text":"real interest rate interest rate inflation. negative (e.g. equal average yearly inflation rate) can show diminishing purchasing power time. positive, can show increasing purchasing power time, effect compounding interest purchasing power.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_purchasing_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate purchasing power — calc_purchasing_power","text":"","code":"calc_purchasing_power(x = 10, years = 30, real_interest_rate = -0.02) #> [1] 5.520709 calc_purchasing_power(x = 10, years = 30, real_interest_rate = 0.02) #> [1] 18.11362"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_retirement_ruin.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating retirement ruin probability — calc_retirement_ruin","title":"Calculating retirement ruin probability — calc_retirement_ruin","text":"Calculating retirement ruin probability","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_retirement_ruin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating retirement ruin probability — calc_retirement_ruin","text":"","code":"calc_retirement_ruin(   portfolio_return_mean,   portfolio_return_sd,   age,   gompertz_mode,   gompertz_dispersion,   portfolio_value,   monthly_spendings,   yearly_spendings = 12 * monthly_spendings,   spending_rate = yearly_spendings/portfolio_value )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_retirement_ruin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating retirement ruin probability — calc_retirement_ruin","text":"portfolio_return_mean numeric. Mean portfolio returns. portfolio_return_sd numeric. Standard deviation portfolio returns. age numeric. Current age. gompertz_mode numeric. Gompertz mode. gompertz_dispersion numeric. Gompertz dispersion. portfolio_value numeric. Initial portfolio value. monthly_spendings numeric. Monthly spendings. yearly_spendings numeric. Yearly spendings. spending_rate numeric. Spending rate (initial withdrawal rate).","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_retirement_ruin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating retirement ruin probability — calc_retirement_ruin","text":"numeric. probability retirement ruin (0 1), representing likelihood running money retirement.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_retirement_ruin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculating retirement ruin probability — calc_retirement_ruin","text":"Milevsky, M.. (2020). Retirement Income Recipes R: Ruin Probabilities Intelligent Drawdowns. Use R! Series. doi:10.1007/978-3-030-51434-1 .","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_retirement_ruin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating retirement ruin probability — calc_retirement_ruin","text":"","code":"calc_retirement_ruin(   age                   = 65,   gompertz_mode         = 88,   gompertz_dispersion   = 10,   portfolio_value       = 1000000,   monthly_spendings     = 3000,     portfolio_return_mean = 0.02,   portfolio_return_sd   = 0.15 ) #> [1] 0.1326"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_risk_adjusted_return.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate risk adjusted return — calc_risk_adjusted_return","title":"Calculate risk adjusted return — calc_risk_adjusted_return","text":"Calculates risk adjusted return portfolio given allocation risky asset.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_risk_adjusted_return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate risk adjusted return — calc_risk_adjusted_return","text":"","code":"calc_risk_adjusted_return(   safe_asset_return,   risky_asset_return_mean,   risky_asset_allocation,   risky_asset_return_sd = NULL,   risk_aversion = NULL )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_risk_adjusted_return.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate risk adjusted return — calc_risk_adjusted_return","text":"safe_asset_return numeric. expected yearly return safe asset. risky_asset_return_mean numeric. expected (average) yearly return risky asset. risky_asset_allocation numeric. allocation risky asset. vector. optimal allocation parameters risky_asset_return_sd risk_aversion can omitted. risky_asset_return_sd numeric. standard deviation yearly returns risky asset. risk_aversion numeric. risk aversion coefficient.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_risk_adjusted_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate risk adjusted return — calc_risk_adjusted_return","text":"numeric. risk adjusted return.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/calc_risk_adjusted_return.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate risk adjusted return — calc_risk_adjusted_return","text":"","code":"calc_risk_adjusted_return(   safe_asset_return = 0.02,   risky_asset_return_mean = 0.04,   risky_asset_return_sd = 0.15,   risky_asset_allocation = 0.5,   risk_aversion = 2 ) #> [1] 0.024375  calc_risk_adjusted_return(   safe_asset_return = 0.02,   risky_asset_return_mean = 0.04,   risky_asset_allocation = c(0.25, 0.5, 0.75),   risky_asset_return_sd = 0.15,   risk_aversion = 2 ) #> [1] 0.02359375 0.02437500 0.02234375"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/create_portfolio_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Portfolio Template — create_portfolio_template","title":"Create Portfolio Template — create_portfolio_template","text":"Creates template default portfolio two asset classes: GlobalStocksIndexFund InflationProtectedBonds","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/create_portfolio_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Portfolio Template — create_portfolio_template","text":"","code":"create_portfolio_template()"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/create_portfolio_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Portfolio Template — create_portfolio_template","text":"nested tibble class 'Portfolio' columns: name expected_return standard_deviation accounts taxable taxadvantaged weights human_capital liabilities correlations pretax turnover income_qualified capital_gains_long_term income capital_gains cost_basis","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/create_portfolio_template.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Portfolio Template — create_portfolio_template","text":"template used starting point creating portfolio. asset classes reasonable default values expected returns standard deviations returns. template assumes correlations asset classes correlations matrix. Please check update template assumptions necessary. nested pretax columns contain default values parameters needed calculating effective tax rates. template assumes capital gains tax paid. Please customise template individual situation. accounts nested columns zero values assets default taxable tax-advantaged accounts. template assumes currently financial wealth allocated accounts. Please customise template individual situation. weights nested columns define weights assets portfolios representative household human capital liabilities. template assumes equal weights assets portfolios. Please customise template individual situation.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/create_portfolio_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Portfolio Template — create_portfolio_template","text":"","code":"portfolio <- create_portfolio_template()   portfolio$accounts$taxable <- c(10000, 30000)   portfolio #>  #> ── Portfolio ─────────────────────────────────────────────────────────────────── #>  #> ── Market assumptions ── #>  #> ── Expected real returns:  #> # A tibble: 2 × 3 #>   name                    expected_return standard_deviation #>   <chr>                             <dbl>              <dbl> #> 1 GlobalStocksIndexFund            0.0506               0.15 #> 2 InflationProtectedBonds          0.02                 0    #>  #> ── Correlation matrix:  #>                         GlobalStocksIndexFund InflationProtectedBonds #> GlobalStocksIndexFund                       1                       0 #> InflationProtectedBonds                     0                       1 #>  #> ── Weights ── #>  #>                         human_capital liabilities #> GlobalStocksIndexFund             0.5         0.5 #> InflationProtectedBonds           0.5         0.5 #>  #> ── Accounts ── #>  #> # A tibble: 3 × 4 #>   name                    taxable taxadvantaged total #>   <chr>                     <dbl>         <dbl> <dbl> #> 1 GlobalStocksIndexFund     10000             0 10000 #> 2 InflationProtectedBonds   30000             0 30000 #> 3 total                     40000             0 40000 #>  #> ── Pre-tax ── #>  #> # A tibble: 2 × 7 #>   name                    turnover income_qualified capital_gains_long_term #>   <chr>                      <dbl>            <dbl>                   <dbl> #> 1 GlobalStocksIndexFund       0.04                0                       1 #> 2 InflationProtectedBonds     0.04                0                       1 #>   income capital_gains cost_basis #>    <dbl>         <dbl>      <dbl> #> 1      0        0.0506      0.610 #> 2      0        0.02        0.820 #>  #> ── After-tax ── #>  #> ! After-tax information is not available yet. #> ℹ Use `calc_effective_tax_rate()` to calculate it. #>  #>  #> ── Allocation ── #>  #> ! Allocation information is not available yet. #> ℹ Use `calc_optimal_asset_allocation()` to calculate it."},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/format.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing currency values or percentages — format_currency","title":"Printing currency values or percentages — format_currency","text":"Wrapper functions printing nicely formatted values.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing currency values or percentages — format_currency","text":"","code":"format_currency(   x,   prefix = \"\",   suffix = \"\",   big.mark = \",\",   accuracy = NULL,   min_length = NULL,   ... )  format_percent(x, accuracy = 0.1, ...)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing currency values or percentages — format_currency","text":"x numeric vector prefix, suffix Symbols display value. big.mark Character used every 3 digits separate thousands. default (NULL) retrieves setting number options. accuracy number round . Use (e.g.) 0.01 show 2 decimal places precision. NULL, default, uses heuristic ensure breaks minimum number digits needed show difference adjacent values. Applied rescaled data. min_length numeric. Minimum number characters string formatted value. ... arguments passed base::format().","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing currency values or percentages — format_currency","text":"character. Formatted value. character. Formatted value.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing currency values or percentages — format_currency","text":"","code":"format_currency(2345678, suffix = \" PLN\") #> [1] \"2,345,678 PLN\" format_percent(0.52366) #> [1] \"52.4%\""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/get_current_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current date — get_current_date","title":"Get current date — get_current_date","text":"R4GPF.current_date option set, current system date used.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/get_current_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current date — get_current_date","text":"","code":"get_current_date()"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/get_current_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current date — get_current_date","text":"date.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/get_current_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get current date — get_current_date","text":"","code":"get_current_date() #> [1] \"2025-06-05\" # Setting custom date using `R4GPF.current_date` option options(R4GPF.current_date = as.Date(\"2023-01-01\")) get_current_date() #> [1] \"2023-01-01\" options(R4GPF.current_date = NULL) # Reset default date#' Working with cache  get_current_date() #> [1] \"2025-06-05\""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/life_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"HMD life tables — life_tables","title":"HMD life tables — life_tables","text":"data frame based : HMD. Human Mortality Database. Max Planck Institute Demographic Research (Germany), University California, Berkeley (USA), French Institute Demographic Studies (France). Available www.mortality.org.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/life_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HMD life tables — life_tables","text":"","code":"life_tables"},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/life_tables.html","id":"life-tables","dir":"Reference","previous_headings":"","what":"life_tables","title":"HMD life tables — life_tables","text":"data frame 6 columns: country Country name sex Sex: \"male\", \"female\", \"\" year Year age Age mortality_rate Mortality rate life_expectancy Life expectancy","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/life_tables.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HMD life tables — life_tables","text":"https://www.mortality.org","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_allocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expected allocation over household life cycle — plot_expected_allocation","title":"Plot expected allocation over household life cycle — plot_expected_allocation","text":"Plot expected allocation household life cycle","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_allocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expected allocation over household life cycle — plot_expected_allocation","text":"","code":"plot_expected_allocation(   scenario,   accounts = c(\"all\", \"taxable\", \"taxadvantaged\") )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_allocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expected allocation over household life cycle — plot_expected_allocation","text":"scenario tibble nested columns - result simulate_scenario(). Data single scenario. accounts character. Plot allocation specified types accounts.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_allocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expected allocation over household life cycle — plot_expected_allocation","text":"ggplot2::ggplot() object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_allocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expected allocation over household life cycle — plot_expected_allocation","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"2000-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"members$older$age <= 65 ~ 10000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"TRUE ~ 5000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000) portfolio$weights$human_capital <- c(0.2, 0.8) portfolio$weights$liabilities <- c(0.1, 0.9) portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg            = 0.20,      tax_rate_ordinary_income = 0.40   )  scenario <-    simulate_scenario(    household    = household,    portfolio    = portfolio,    current_date = \"2020-07-15\"   )  plot_expected_allocation(scenario) }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_capital.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expected capital over household life cycle — plot_expected_capital","title":"Plot expected capital over household life cycle — plot_expected_capital","text":"Plots financial capital, human capital, total capital, liabilities.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_capital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expected capital over household life cycle — plot_expected_capital","text":"","code":"plot_expected_capital(scenario)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_capital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expected capital over household life cycle — plot_expected_capital","text":"scenario tibble nested columns - result simulate_scenario(). Data single scenario.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_capital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expected capital over household life cycle — plot_expected_capital","text":"ggplot2::ggplot() object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_expected_capital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expected capital over household life cycle — plot_expected_capital","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"2000-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"members$older$age <= 65 ~ 10000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"TRUE ~ 5000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000) portfolio$weights$human_capital <- c(0.2, 0.8) portfolio$weights$liabilities <- c(0.1, 0.9) portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg            = 0.20,      tax_rate_ordinary_income = 0.40   )  scenario <-    simulate_scenario(    household    = household,    portfolio    = portfolio,    current_date = \"2020-07-15\"   )  plot_expected_capital(scenario) }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_income.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot future income structure over household life cycle — plot_future_income","title":"Plot future income structure over household life cycle — plot_future_income","text":"Plot future income structure household life cycle","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_income.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot future income structure over household life cycle — plot_future_income","text":"","code":"plot_future_income(   scenario,   period = c(\"yearly\", \"monthly\"),   y_limits = c(NA, NA) )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_income.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot future income structure over household life cycle — plot_future_income","text":"scenario tibble nested columns - result simulate_scenario(). Data single scenario. period character. amounts can shown yearly values (default) averaged per month values. y_limits numeric vector two values. Y-axis limits.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_income.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot future income structure over household life cycle — plot_future_income","text":"ggplot2::ggplot() object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_income.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot future income structure over household life cycle — plot_future_income","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"1980-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"members$older$age <= 65 ~ 7000 * 12\",     \"members$older$age > 65 ~ 3000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"TRUE ~ 5000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000) portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg = 0.20,      tax_rate_ordinary_income = 0.40   )  scenario <-    simulate_scenario(    household = household,    portfolio = portfolio,    current_date = \"2020-07-15\"   )  plot_future_income(scenario, \"monthly\") }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_spending.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot future spending structure over household life cycle — plot_future_spending","title":"Plot future spending structure over household life cycle — plot_future_spending","text":"Plot future spending structure household life cycle, including discretionary non-discretionary spending. can also plot discretionary non-discretionary spending separately, see structure non-discretionary spending possible levels discretionary spending time based Monte Carlo simulations.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_spending.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot future spending structure over household life cycle — plot_future_spending","text":"","code":"plot_future_spending(   scenario,   period = c(\"yearly\", \"monthly\"),   type = c(\"both\", \"discretionary\", \"non-discretionary\"),   discretionary_spending_position = c(\"bottom\", \"top\"),   y_limits = c(NA, NA) )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_spending.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot future spending structure over household life cycle — plot_future_spending","text":"scenario tibble nested columns - result simulate_scenario(). Data single scenario. period character. amounts can shown yearly values (default) averaged per month values. type character. Type spending plot: discretionary, non-discretionary, (default). discretionary_spending_position character. Position discretionary spending plot. Bottom default. y_limits numeric vector two values. Y-axis limits.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_spending.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot future spending structure over household life cycle — plot_future_spending","text":"ggplot2::ggplot() object","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_future_spending.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot future spending structure over household life cycle — plot_future_spending","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"1980-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"members$older$age <= 65 ~ 9000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"members$older$age <= 65 ~ 5000 * 12\",     \"TRUE ~ 4000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000) portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg = 0.20,      tax_rate_ordinary_income = 0.40   )  scenario <-    simulate_scenario(    household = household,    portfolio = portfolio,    # monte_carlo_samples = 100,    current_date = \"2020-07-15\"   )  plot_future_spending(scenario, \"monthly\") plot_future_spending(   scenario,    \"monthly\",    discretionary_spending_position = \"top\" ) plot_future_spending(scenario, \"monthly\", \"non-discretionary\") # If Monte Carlo samples are present:  # plot_future_spending(scenario, \"monthly\", \"discretionary\") }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_gompertz_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting the results of Gompertz model calibration — plot_gompertz_calibration","title":"Plotting the results of Gompertz model calibration — plot_gompertz_calibration","text":"Plotting results Gompertz model calibration","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_gompertz_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting the results of Gompertz model calibration — plot_gompertz_calibration","text":"","code":"plot_gompertz_calibration(params, mode, dispersion, max_age)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_gompertz_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting the results of Gompertz model calibration — plot_gompertz_calibration","text":"params list returned calc_gompertz_parameters() function. mode numeric. mode Gompertz model. dispersion numeric. dispersion Gompertz model. max_age numeric. maximum age Gompertz model.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_gompertz_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting the results of Gompertz model calibration — plot_gompertz_calibration","text":"ggplot2::ggplot() object showing comparison actual survival rates life tables fitted Gompertz model.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_gompertz_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting the results of Gompertz model calibration — plot_gompertz_calibration","text":"","code":"mortality_rates <-    dplyr::filter(     life_tables,     country == \"USA\" &      sex     == \"female\" &     year    == 2022   )    params <- calc_gompertz_parameters(   mortality_rates = mortality_rates,   current_age     = 65 )  plot_gompertz_calibration(params = params)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_joint_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting the results of Gompertz model calibration for joint survival — plot_joint_survival","title":"Plotting the results of Gompertz model calibration for joint survival — plot_joint_survival","text":"Plotting results Gompertz model calibration joint survival","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_joint_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting the results of Gompertz model calibration for joint survival — plot_joint_survival","text":"","code":"plot_joint_survival(params, include_gompertz = FALSE)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_joint_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting the results of Gompertz model calibration for joint survival — plot_joint_survival","text":"params list returned calc_gompertz_joint_parameters() function. include_gompertz logical. Gompertz survival curve included plot?","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_joint_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting the results of Gompertz model calibration for joint survival — plot_joint_survival","text":"ggplot2::ggplot() object showing survival probabilities two individuals joint survival probability.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_joint_survival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting the results of Gompertz model calibration for joint survival — plot_joint_survival","text":"","code":"params <- calc_gompertz_joint_parameters(   p1 = list(     age        = 65,     mode       = 88,     dispersion = 10.65   ),   p2 = list(     age        = 60,     mode       = 91,     dispersion = 8.88   ),   max_age = 110 )  plot_joint_survival(params = params, include_gompertz = TRUE)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_life_expectancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot life expectancy of household members — plot_life_expectancy","title":"Plot life expectancy of household members — plot_life_expectancy","text":"Probability dying given age plotted member household. Also member life expectancy shown dashed vertical line.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_life_expectancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot life expectancy of household members — plot_life_expectancy","text":"","code":"plot_life_expectancy(household)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_life_expectancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot life expectancy of household members — plot_life_expectancy","text":"household R6 object class Household.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_life_expectancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot life expectancy of household members — plot_life_expectancy","text":"ggplot object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_life_expectancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot life expectancy of household members — plot_life_expectancy","text":"","code":"hm1 <-   HouseholdMember$new(    name       = \"member1\",    birth_date = \"1955-01-01\",    mode       = 88,    dispersion = 10.65  ) hm2 <-   HouseholdMember$new(    name       = \"member2\",    birth_date = \"1965-01-01\",    mode       = 91,    dispersion = 8.88  ) household <- Household$new() household$add_member(hm1) household$add_member(hm2)  plot_life_expectancy(household = household)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_optimal_portfolio.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot optimal portfolio allocations — plot_optimal_portfolio","title":"Plot optimal portfolio allocations — plot_optimal_portfolio","text":"function plots current versus optimal portfolio allocations asset class taxable tax-advantaged accounts.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_optimal_portfolio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot optimal portfolio allocations — plot_optimal_portfolio","text":"","code":"plot_optimal_portfolio(portfolio)"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_optimal_portfolio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot optimal portfolio allocations — plot_optimal_portfolio","text":"portfolio nested tibble class Portfolio.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_optimal_portfolio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot optimal portfolio allocations — plot_optimal_portfolio","text":"ggplot2::ggplot() object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_optimal_portfolio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot optimal portfolio allocations — plot_optimal_portfolio","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"1980-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"members$older$age <= 65 ~ 7000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"TRUE ~ 5000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000) portfolio$accounts$taxadvantaged <- c(0, 20000) portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg = 0.20,      tax_rate_ordinary_income = 0.40   )  portfolio <-    calc_optimal_asset_allocation(    household = household,    portfolio = portfolio,    current_date = \"2020-07-15\"   )  plot_optimal_portfolio(portfolio) }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_purchasing_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting changes to the purchasing power over time — plot_purchasing_power","title":"Plotting changes to the purchasing power over time — plot_purchasing_power","text":"Plots effect real interest rates (positive negative) purchasing power savings span 50 years (default).","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_purchasing_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting changes to the purchasing power over time — plot_purchasing_power","text":"","code":"plot_purchasing_power(   x,   real_interest_rate,   years = 50,   legend_title = \"Real interest rate\",   seed = NA )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_purchasing_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting changes to the purchasing power over time — plot_purchasing_power","text":"x numeric. initial amount money. real_interest_rate numeric. yearly real interest rate. years numeric. number years. legend_title character. seed numeric. Seed passed geom_label_repel().","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_purchasing_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting changes to the purchasing power over time — plot_purchasing_power","text":"ggplot2::ggplot() object.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_purchasing_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting changes to the purchasing power over time — plot_purchasing_power","text":"","code":"plot_purchasing_power(   x = 10,   real_interest_rate = seq(-0.02, 0.04, by = 0.02) )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_retirement_ruin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting retirement ruin — plot_retirement_ruin","title":"Plotting retirement ruin — plot_retirement_ruin","text":"Plotting retirement ruin","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_retirement_ruin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting retirement ruin — plot_retirement_ruin","text":"","code":"plot_retirement_ruin(   portfolio_return_mean,   portfolio_return_sd,   age,   gompertz_mode,   gompertz_dispersion,   portfolio_value,   monthly_spendings = NULL )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_retirement_ruin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting retirement ruin — plot_retirement_ruin","text":"portfolio_return_mean numeric. Mean portfolio returns. portfolio_return_sd numeric. Standard deviation portfolio returns. age numeric. Current age. gompertz_mode numeric. Gompertz mode. gompertz_dispersion numeric. Gompertz dispersion. portfolio_value numeric. Initial portfolio value. monthly_spendings numeric. Monthly spendings.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_retirement_ruin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting retirement ruin — plot_retirement_ruin","text":"ggplot2::ggplot() object showing probability retirement ruin different monthly spending levels. specific 'monthly_spendings' value provided, highlighted plot annotations.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_retirement_ruin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting retirement ruin — plot_retirement_ruin","text":"","code":"plot_retirement_ruin(   portfolio_return_mean = 0.034,   portfolio_return_sd   = 0.15,   age                   = 65,   gompertz_mode         = 88,   gompertz_dispersion   = 10,   portfolio_value       = 1000000,   monthly_spendings     = 3000 )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_risk_adjusted_returns.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting risk adjusted returns — plot_risk_adjusted_returns","title":"Plotting risk adjusted returns — plot_risk_adjusted_returns","text":"Plots risk adjusted returns portfolios various allocations risky asset.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_risk_adjusted_returns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting risk adjusted returns — plot_risk_adjusted_returns","text":"","code":"plot_risk_adjusted_returns(   safe_asset_return,   risky_asset_return_mean,   risky_asset_return_sd,   risk_aversion = 2,   current_risky_asset_allocation = NULL )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_risk_adjusted_returns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting risk adjusted returns — plot_risk_adjusted_returns","text":"safe_asset_return numeric. expected yearly return safe asset. risky_asset_return_mean numeric. expected (average) yearly return risky asset. risky_asset_return_sd numeric. standard deviation yearly returns risky asset. risk_aversion numeric. risk aversion coefficient. current_risky_asset_allocation numeric. current allocation risky asset. comparison optimal allocation.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_risk_adjusted_returns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting risk adjusted returns — plot_risk_adjusted_returns","text":"ggplot2::ggplot() object.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_risk_adjusted_returns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting risk adjusted returns — plot_risk_adjusted_returns","text":"","code":"plot_risk_adjusted_returns(   safe_asset_return              = 0.02,   risky_asset_return_mean        = 0.04,   risky_asset_return_sd          = 0.15,   risk_aversion                  = 2,   current_risky_asset_allocation = 0.8 )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scenarios metrics — plot_scenarios","title":"Plot scenarios metrics — plot_scenarios","text":"plot allows compare metrics multiple scenarios. scenarios simulated without Monte Carlo samples, based expected returns portfolio, two metrics available scenario: constant discretionary spending - certainty equivalent constant level consumption result lifetime utility given series future consumption given scenario (higher, better). utility discretionary spending - normalized minimum maximum values constant discretionary spending (higher, better). scenarios simulated additional Monte Carlo samples, four metrics available per scenario: constant discretionary spending (Monte Carlo samples), normalized median utility discretionary spending (Monte Carlo samples), median missing funds need additional income additional savings expense non-discretionary spending, (yearly averages Monte Carlo samples), median discretionary spending (yearly averages Monte Carlo samples).","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scenarios metrics — plot_scenarios","text":"","code":"plot_scenarios(scenarios, period = c(\"yearly\", \"monthly\"))"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_scenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scenarios metrics — plot_scenarios","text":"scenarios tibble nested columns - result simulate_scenarios(). period character. amounts can shown yearly values (default) averaged per month values.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_scenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scenarios metrics — plot_scenarios","text":"ggplot2::ggplot() object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_scenarios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scenarios metrics — plot_scenarios","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"1980-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"is_not_on('older', 'retirement') ~ 7000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"TRUE ~ 4000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(100000, 300000) portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg = 0.20,      tax_rate_ordinary_income = 0.40   )  start_ages <- c(60, 65, 75) scenarios_parameters <-    tibble::tibble(     member    = \"older\",     event      = \"retirement\",     start_age = start_ages,     years     = Inf,     end_age   = Inf    ) |>    dplyr::mutate(scenario_id = start_age) |>    tidyr::nest(events = -scenario_id)  scenarios <-    simulate_scenarios(     scenarios_parameters = scenarios_parameters,     household            = household,     portfolio            = portfolio,     maxeval              = 100,     current_date         = \"2020-07-15\"   )  plot_scenarios(scenarios, \"monthly\") }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot survival of household members — plot_survival","title":"Plot survival of household members — plot_survival","text":"Plot survival probabilities household members entire household least one member alive. household joint survival probability also approximated Gompertz model.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot survival of household members — plot_survival","text":"","code":"plot_survival(household, current_date = get_current_date())"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot survival of household members — plot_survival","text":"household R6 object class Household. current_date character. Current date format YYYY-MM-DD. default, output get_current_date().","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot survival of household members — plot_survival","text":"ggplot object.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/plot_survival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot survival of household members — plot_survival","text":"","code":"hm1 <-   HouseholdMember$new(    name       = \"member1\",    birth_date = \"1955-01-01\",    mode       = 88,    dispersion = 10.65  ) hm2 <-   HouseholdMember$new(    name       = \"member2\",    birth_date = \"1965-01-01\",    mode       = 91,    dispersion = 8.88  ) hm3 <-   HouseholdMember$new(    name       = \"member3\",    birth_date = \"1975-01-01\",    mode       = 88,    dispersion = 7.77  ) household <- Household$new() household$add_member(hm1) household$add_member(hm2) household$add_member(hm3)   plot_survival(  household    = household,   current_date = \"2020-01-01\" )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/read_hmd_life_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Reading HMD life tables — read_hmd_life_tables","title":"Reading HMD life tables — read_hmd_life_tables","text":"Reading HMD life tables","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/read_hmd_life_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reading HMD life tables — read_hmd_life_tables","text":"","code":"read_hmd_life_tables(   path = getwd(),   files = c(\"mltper_1x1.txt\", \"fltper_1x1.txt\", \"bltper_1x1.txt\") )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/read_hmd_life_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reading HMD life tables — read_hmd_life_tables","text":"path character. Path folder life tables. files character. Names files life tables.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/read_hmd_life_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reading HMD life tables — read_hmd_life_tables","text":"data frame containing mortality data columns: sex Character - sex ('male', 'female', '') year Integer - year data age Integer - age mortality_rate Numeric - mortality rate life_expectancy Numeric - life expectancy","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/read_hmd_life_tables.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reading HMD life tables — read_hmd_life_tables","text":"HMD. Human Mortality Database. Max Planck Institute Demographic Research (Germany), University California, Berkeley (USA), French Institute Demographic Studies (France). Available www.mortality.org","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/read_hmd_life_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reading HMD life tables — read_hmd_life_tables","text":"","code":"if (FALSE) { # \\dontrun{ # Download 'txt' files  # (\"mltper_1x1.txt\", \"fltper_1x1.txt\", \"bltper_1x1.txt\")  # for a given country to the working directory # from https://www.mortality.org after registration.  read_hmd_life_tables(path = getwd()) } # }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a package app — run_app","title":"Run a package app — run_app","text":"Run package app","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a package app — run_app","text":"","code":"run_app(   which = c(\"risk-adjusted-returns\", \"purchasing-power\", \"retirement-ruin\"),   res = 120,   shinylive = FALSE )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a package app — run_app","text":"character. name app run. Currently available: risk-adjusted-returns - Plotting risk-adjusted returns various allocations risky asset allows find optimal allocation. purchasing-power - Plotting effect real interest rates (positive negative) purchasing power savings time. retirement-ruin - Plotting probability retirement ruin. res numeric. initial resolution plots. shinylive logical. Whether use shinylive app.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a package app — run_app","text":"shiny::shinyApp() object shinylive TRUE. Runs app shinylive FALSE shiny::runApp().","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a package app — run_app","text":"","code":"if (FALSE) { # interactive() run_app(\"risk-adjusted-returns\") run_app(\"purchasing-power\") run_app(\"retirement-ruin\") }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a scenario of household lifetime finances — simulate_scenario","title":"Simulate a scenario of household lifetime finances — simulate_scenario","text":"function simulates scenario household lifetime finances returns tibble nested columns. default Monte Carlo samples generated, single sample based portfolio expected returns returned column sample=0. additional Monte Carlo samples generated, consecutive IDs starting 1 sample column.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a scenario of household lifetime finances — simulate_scenario","text":"","code":"simulate_scenario(   household,   portfolio,   scenario_id = \"default\",   current_date = get_current_date(),   monte_carlo_samples = NULL,   seeds = NULL,   use_cache = FALSE,   debug = FALSE,   ... )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a scenario of household lifetime finances — simulate_scenario","text":"household R6 object class Household. portfolio nested tibble class Portfolio. scenario_id character. ID scenario. current_date character. Current date format YYYY-MM-DD. default, output get_current_date(). monte_carlo_samples integer. Number Monte Carlo samples. NULL (default), Monte Carlo samples generated. seeds integer vector. Seeds random number generator used generate random portfolio returns Monte Carlo sample. NULL (default), random seed generated automatically. use_cache logical. TRUE, function uses memoised functions speed simulation. results cached folder set set_cache(). debug logical. TRUE, additional information printed simulation. ... Additional arguments passed simulation functions.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a scenario of household lifetime finances — simulate_scenario","text":"tibble nested columns including: scenario_id - (character) ID scenario sample - (integer) ID Monte Carlo sample index - (integer) year index starting 0 years_left - (integer) years left end household lifespan date - (date) date index years current date year - (integer) calendar year survival_prob - (double) survival probability household members - (nested tibble) data member household income - (nested tibble) income streams total_income - (double) total income household income streams spending - (nested tibble) non-discretionary spending streams nondiscretionary_spending - (double) total non-discretionary spending household non-discretionary spending streams human_capital - (double) human capital household liabilities - (double) liabilities household portfolio - (nested tibble) state investment portfolio financial_wealth - (double) financial wealth household beginning year net_worth - (double) net worth household discretionary_spending - (double) optimal discretionary spending household total_spending - (double) total spending household (discretionary + non-discretionary) financial_wealth_end - (double) financial wealth household end year risk_tolerance - (double) risk tolerance household smooth_consumption_preference - (double) smooth consumption preference household consumption_impatience_preference - (double) consumption impatience preference household time_value_discount - (double) time value discount based consumption impatience household discretionary_spending_utility - (double) discretionary spending utility household based smooth consumption preference discretionary_spending_utility_weighted - (double) discretionary spending utility household weighted survival probability time value discount.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a scenario of household lifetime finances — simulate_scenario","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"1980-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"members$older$age <= 65 ~ 7000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"TRUE ~ 5000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000) portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg = 0.20,      tax_rate_ordinary_income = 0.40   )  scenario <-    simulate_scenario(    household = household,    portfolio = portfolio,    current_date = \"2020-07-15\"   ) names(scenario) }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate multiple scenarios of household lifetime finances — simulate_scenarios","title":"Simulate multiple scenarios of household lifetime finances — simulate_scenarios","text":"Simulate multiple scenarios household lifetime finances","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate multiple scenarios of household lifetime finances — simulate_scenarios","text":"","code":"simulate_scenarios(   scenarios_parameters,   household,   portfolio,   current_date = get_current_date(),   monte_carlo_samples = NULL,   auto_parallel = FALSE,   use_cache = FALSE,   debug = FALSE,   ... )"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate multiple scenarios of household lifetime finances — simulate_scenarios","text":"scenarios_parameters tibble column scenario_id nested column events. scenario defined one events tibbles stored list events column. household R6 object class Household. portfolio nested tibble class Portfolio. current_date character. Current date format YYYY-MM-DD. default, output get_current_date(). monte_carlo_samples integer. Number Monte Carlo samples. NULL (default), Monte Carlo samples generated. auto_parallel logical. TRUE, function automatically detects number cores uses parallel processing speed Monte Carlo simulations. results cached folder set set_cache(). use_cache logical. TRUE, function uses memoised functions speed simulation. results cached folder set set_cache(). debug logical. TRUE, additional information printed simulation. ... Additional arguments passed simulation functions.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate multiple scenarios of household lifetime finances — simulate_scenarios","text":"tibble nested columns.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/reference/simulate_scenarios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate multiple scenarios of household lifetime finances — simulate_scenarios","text":"","code":"if (FALSE) { # interactive() older_member <- HouseholdMember$new(   name       = \"older\",     birth_date = \"1980-02-15\",   mode       = 80,   dispersion = 10 )   household <- Household$new() household$add_member(older_member)    household$expected_income <- list(   \"income\" = c(     \"members$older$age <= 65 ~ 7000 * 12\"   ) ) household$expected_spending <- list(   \"spending\" = c(     \"TRUE ~ 5000 * 12\"   ) )  portfolio <- create_portfolio_template()  portfolio$accounts$taxable <- c(10000, 30000) portfolio <-    portfolio |>    calc_effective_tax_rate(     tax_rate_ltcg = 0.20,      tax_rate_ordinary_income = 0.40   ) start_ages <- c(60, 65, 70) scenarios_parameters <-    tibble::tibble(     member    = \"older\",     event      = \"retirement\",     start_age = start_ages,     years     = Inf,     end_age   = Inf    ) |>    dplyr::mutate(scenario_id = start_age) |>    tidyr::nest(events = -scenario_id)  scenarios_parameters  scenarios <-    simulate_scenarios(     scenarios_parameters = scenarios_parameters,     household            = household,     portfolio            = portfolio,     current_date         = \"2020-07-15\"   ) scenarios$scenario_id |> unique() }"},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/news/index.html","id":"r4goodpersonalfinances-100","dir":"Changelog","previous_headings":"","what":"R4GoodPersonalFinances 1.0.0","title":"R4GoodPersonalFinances 1.0.0","text":"CRAN release: 2025-06-04 major release introduces probably first world (open-sourced) implementation new multilevel life-cycle modeling household finances. connects life-cycle models single-period net-worth Markowitz optimization models allows high degree personalization. implementation based novel theoretical framework, described Thomas M. Idzorek Paul D. Kaplan “Lifetime Financial Advice: Personalized Optimal Multilevel Approach” (2024).","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"R4GoodPersonalFinances 1.0.0","text":"Added Household R6 class aggregates information household members HouseholdMember class aggregates information single member household. Added functions responsible setting, resetting getting information disk cache caching results simulations: set_cache(), reset_cache() get_cache(). Added calc_life_expectancy() function calculate life expectancy person based Gompertz model. Added plot_life_expectancy() function visualize probability dying life expectancy every member Household object similar plot_survival() function visualizing probability survival members Household probability least one member Household survive. Added create_portfolio_template() function create exemplary Portoflio object - template default portfolio two asset classes: GlobalStocksIndexFund InflationProtectedBonds reasonable default values updated customised . Added calc_portfolio_parameters() function calculate parameters Portfolio object like current value, weights assets, expected return standard deviation whole portfolio. Added calc_optimal_asset_allocation() function calculate optimal allocation particular Household Portfolio objects. Added plot_optimal_portfolio() function visualize current optimal allocation assets particular Portfolio object. Added simulate_scenario() function simulate single scenario cash flows particular Household Portfolio objects using expected returns assets portfolio random returns multiple Monte Carlo samples. Added simulate_scenarios() function simulate multiple scenarios cash flows particular Household Portfolio objects. scenarios parameters can triggered different events like different years retirement. Added plot_scenarios() function visualize scenarios metrics help choosing optimal parameters best scenario, e.g. optimal year retirement. Added plot_expected_allocation() function visualize expected allocation assets particular scenario household life cycle. Added plot_expected_capital() function visualize expected financial, human, total capital, well liabilities particular scenario household life cycle. Added plot_future_income() plot_future_spending() functions visualize future income spending particular scenario household life cycle. plot_future_spending() function allows plot relation discretionary non-discretionary spending, structure non-discretionary spending possible levels discretionary spending time based Monte Carlo simulations.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/news/index.html","id":"r4goodpersonalfinances-020","dir":"Changelog","previous_headings":"","what":"R4GoodPersonalFinances 0.2.0","title":"R4GoodPersonalFinances 0.2.0","text":"CRAN release: 2025-03-13 release provides functions calculating probability retirement ruin functions calibrating underlying Gompertz model use mortality rates.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"R4GoodPersonalFinances 0.2.0","text":"Added calc_retirement_ruin() plot_retirement_ruin() calculate visualize probability retirement ruin. Added retirement-ruin option run_app() function running package new interactive app. Added calc_gompertz_survival_probability() calculate probability survival using Gompertz model. Added calc_gompertz_parameters() calculate parameters Gompertz model based mortality rates calc_gompertz_joint_parameters() calculate parameters joint Gompertz model. Added plot_gompertz_calibration() visually checking calibration Gompertz model plot_joint_survival() plotting survival probabilities two individuals joint survival probability. Added read_hmd_life_tables() reading ‘Human Mortality Database’ (HMD) life tables files.","code":""},{"path":[]},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/news/index.html","id":"bugfixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"R4GoodPersonalFinances 0.1.1","text":"Fixed apps errors executing locally.","code":""},{"path":"https://r4goodacademy.github.io/R4GoodPersonalFinances/news/index.html","id":"r4goodpersonalfinances-010","dir":"Changelog","previous_headings":"","what":"R4GoodPersonalFinances 0.1.0","title":"R4GoodPersonalFinances 0.1.0","text":"Initial release package includes functions designed support optimal allocation investment portfolio use ‘Merton Share’ formula. Added calc_purchasing_power() plot_purchasing_power() calculate visualize effect real interest rates—whether positive (compounding) negative (inflation)—purchasing power savings. Added calc_optimal_risky_asset_allocation() calculating optimal allocation using ‘Merton Share’ formula. Added calc_risk_adjusted_return() plot_risk_adjusted_returns() calculate visualize effect allocation risky assets risk-adjusted return. Added run_app() function runs package interactive apps: risk-adjusted-returns purchasing-power.","code":""}]
